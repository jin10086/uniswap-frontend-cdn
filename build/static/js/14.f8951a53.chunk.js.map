{"version":3,"sources":["pages/Pool/CreateExchange.js","components/AddressInputPanel/index.js"],"names":["SummaryPanel","styled","div","theme","flexColumnNoWrap","ExchangeRateWrapper","flexRowNoWrap","doveGray","ExchangeRate","span","CreateExchangeWrapper","SummaryText","error","salmonRed","Flex","withRouter","location","params","t","useTranslation","account","useWeb3React","factory","useFactoryContract","useState","address","tokenAddress","name","setTokenAddress","tokenAddressError","setTokenAddressError","useTokenDetails","symbol","decimals","exchangeAddress","addTransaction","useTransactionAdder","useEffect","createBrowserHistory","push","window","pathname","errorMessage","setErrorMessage","undefined","ethers","constants","AddressZero","isValid","title","initialInput","state","onChange","onError","hideBottom","disabled","onClick","a","async","estimate","createExchange","estimatedGasLimit","gasLimit","then","response","ReactGA","event","category","action","InputPanel","transparentize","shadowColor","inputBackground","ContainerRow","mercuryGray","InputContainer","LabelRow","LabelContainer","InputRow","Input","input","royalBlue","placeholderGray","AddressInputPanel","library","setInput","debouncedInput","useDebounce","data","setData","setError","stale","isAddress","lookupAddress","catch","resolveName","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","target","value","checksummedInput"],"mappings":"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","file":"static/js/14.f8951a53.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router'\nimport { createBrowserHistory } from 'history'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\n\nimport { useWeb3React, useFactoryContract } from '../../hooks'\nimport { Button } from '../../theme'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\n\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  padding: 1rem 0;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst CreateExchangeWrapper = styled.div`\n  color: ${({ theme }) => theme.doveGray};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst SummaryText = styled.div`\n  font-size: 0.75rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction CreateExchange({ location, params }) {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const factory = useFactoryContract()\n\n  const [tokenAddress, setTokenAddress] = useState({\n    address: params.tokenAddress ? params.tokenAddress : '',\n    name: ''\n  })\n  const [tokenAddressError, setTokenAddressError] = useState()\n\n  const { name, symbol, decimals, exchangeAddress } = useTokenDetails(tokenAddress.address)\n  const addTransaction = useTransactionAdder()\n\n  // clear url of query\n  useEffect(() => {\n    const history = createBrowserHistory()\n    history.push(window.location.pathname + '')\n  }, [])\n\n  // validate everything\n  const [errorMessage, setErrorMessage] = useState(!account && t('noWallet'))\n  useEffect(() => {\n    if (tokenAddressError) {\n      setErrorMessage(t('invalidTokenAddress'))\n    } else if (symbol === undefined || decimals === undefined || exchangeAddress === undefined) {\n      setErrorMessage()\n    } else if (symbol === null) {\n      setErrorMessage(t('invalidSymbol'))\n    } else if (decimals === null) {\n      setErrorMessage(t('invalidDecimals'))\n    } else if (exchangeAddress !== ethers.constants.AddressZero) {\n      setErrorMessage(t('exchangeExists'))\n    } else if (!account) {\n      setErrorMessage(t('noWallet'))\n    } else {\n      setErrorMessage(null)\n    }\n\n    return () => {\n      setErrorMessage()\n    }\n  }, [tokenAddress.address, symbol, decimals, exchangeAddress, account, t, tokenAddressError])\n\n  async function createExchange() {\n    const estimatedGasLimit = await factory.estimate.createExchange(tokenAddress.address)\n\n    factory.createExchange(tokenAddress.address, { gasLimit: estimatedGasLimit }).then(response => {\n      ReactGA.event({\n        category: 'Transaction',\n        action: 'Create Exchange'\n      })\n\n      addTransaction(response)\n    })\n  }\n\n  const isValid = errorMessage === null\n\n  return (\n    <>\n      <AddressInputPanel\n        title={t('tokenAddress')}\n        initialInput={\n          params.tokenAddress\n            ? { address: params.tokenAddress }\n            : { address: (location.state && location.state.tokenAddress) || '' }\n        }\n        onChange={setTokenAddress}\n        onError={setTokenAddressError}\n      />\n      <OversizedPanel hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('name')}</ExchangeRate>\n            <span>{name ? name : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('symbol')}</ExchangeRate>\n            <span>{symbol ? symbol : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('decimals')}</ExchangeRate>\n            <span>{decimals || decimals === 0 ? decimals : ' - '}</span>\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      <CreateExchangeWrapper>\n        <SummaryText>{errorMessage ? errorMessage : t('enterTokenCont')}</SummaryText>\n      </CreateExchangeWrapper>\n      <Flex>\n        <Button disabled={!isValid} onClick={createExchange}>\n          {t('createExchange')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default withRouter(CreateExchange)\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { transparentize } from 'polished'\n\nimport { isAddress } from '../../utils'\nimport { useWeb3React, useDebounce } from '../../hooks'\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.inputBackground};\n\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.placeholderGray};\n  }\n`\n\nexport default function AddressInputPanel({ title, initialInput = '', onChange = () => {}, onError = () => {} }) {\n  const { t } = useTranslation()\n\n  const { library } = useWeb3React()\n\n  const [input, setInput] = useState(initialInput.address ? initialInput.address : '')\n\n  const debouncedInput = useDebounce(input, 150)\n\n  const [data, setData] = useState({ address: undefined, name: undefined })\n  const [error, setError] = useState(false)\n\n  // keep data and errors in sync\n  useEffect(() => {\n    onChange({ address: data.address, name: data.name })\n  }, [onChange, data.address, data.name])\n  useEffect(() => {\n    onError(error)\n  }, [onError, error])\n\n  // run parser on debounced input\n  useEffect(() => {\n    let stale = false\n\n    if (isAddress(debouncedInput)) {\n      try {\n        library\n          .lookupAddress(debouncedInput)\n          .then(name => {\n            if (!stale) {\n              // if an ENS name exists, set it as the destination\n              if (name) {\n                setInput(name)\n              } else {\n                setData({ address: debouncedInput, name: '' })\n                setError(null)\n              }\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setData({ address: debouncedInput, name: '' })\n              setError(null)\n            }\n          })\n      } catch {\n        setData({ address: debouncedInput, name: '' })\n        setError(null)\n      }\n    } else {\n      if (debouncedInput !== '') {\n        try {\n          library\n            .resolveName(debouncedInput)\n            .then(address => {\n              if (!stale) {\n                // if the debounced input name resolves to an address\n                if (address) {\n                  setData({ address: address, name: debouncedInput })\n                  setError(null)\n                } else {\n                  setError(true)\n                }\n              }\n            })\n            .catch(() => {\n              if (!stale) {\n                setError(true)\n              }\n            })\n        } catch {\n          setError(true)\n        }\n      }\n    }\n\n    return () => {\n      stale = true\n    }\n  }, [debouncedInput, library, onChange, onError])\n\n  function onInput(event) {\n    if (data.address !== undefined || data.name !== undefined) {\n      setData({ address: undefined, name: undefined })\n    }\n    if (error !== undefined) {\n      setError()\n    }\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setInput(checksummedInput || input)\n  }\n\n  return (\n    <InputPanel>\n      <ContainerRow error={input !== '' && error}>\n        <InputContainer>\n          <LabelRow>\n            <LabelContainer>\n              <span>{title || t('recipientAddress')}</span>\n            </LabelContainer>\n          </LabelRow>\n          <InputRow>\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder=\"0x1234...\"\n              error={input !== '' && error}\n              onChange={onInput}\n              value={input}\n            />\n          </InputRow>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n"],"sourceRoot":""}